{"version":3,"sources":["webpack:///src/app/features/login/login.component.ts","webpack:///src/app/features/login/login.component.html","webpack:///src/app/features/login/login.module.ts","webpack:///src/app/features/login/login.routing.ts"],"names":["LoginComponent","userService","toastService","routeStateService","sessionService","translate","userContextService","http","siteService","sitesResult","getAllPistes","userName","password","locale","getItem","version","msgs","severity","detail","get","apiSite","subscribe","result","emptySite","splice","user","getUserByUserNameAndPassword","setUser","add","site","setItem","addSingle","$event","target","value","undefined","length","use","onClickLogin","selector","templateUrl","styleUrls","HttpLoaderFactory","LoginModule","forChild","loader","provide","useFactory","deps","isolate","imports","declarations","exports","routes","path","component","LoginRoutingModule"],"mappings":"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","file":"src-app-features-login-login-module-es5.js","sourcesContent":["import { SiteService } from './../../core/services/site.service';\r\nimport { HttpService } from './../../core/services/http.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserDataService } from 'src/app/core/services/user-data.service';\r\nimport { User } from 'src/app/core/models/user.model';\r\nimport { ToastService } from 'src/app/core/services/toast.service';\r\nimport { RouteStateService } from 'src/app/core/services/route-state.service';\r\nimport { SessionService } from 'src/app/core/services/session.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserContextService } from 'src/app/core/services/user-context.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: ['login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  userName: string;\r\n\r\n  password: string;\r\n\r\n  locale: string;\r\n\r\n  version: string;\r\n\r\n  msgs: any[];\r\n\r\n  sitesResult: any = [];\r\n\r\n  site: any;\r\n\r\n  constructor(\r\n    private userService: UserDataService,\r\n    private toastService: ToastService,\r\n    private routeStateService: RouteStateService,\r\n    private sessionService: SessionService,\r\n    public translate: TranslateService,\r\n    private userContextService: UserContextService,\r\n    private http: HttpService,\r\n    private siteService: SiteService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllPistes();\r\n    this.userName = \"\";\r\n    this.password = \"\";\r\n    this.locale = this.sessionService.getItem(\"ng-prime-language\");\r\n    this.version = environment.version;\r\n    this.msgs = [{ severity: 'info', detail: 'Utilisateur : admin' }, { severity: 'info', detail: 'Mot de passe : password' }];\r\n  }\r\n\r\n  getAllPistes() {\r\n    this.http\r\n      .get(environment.apiSite)\r\n      .subscribe((result) => {\r\n        this.sitesResult = result;\r\n        let emptySite = {\r\n          \"adresse\": \"\",\r\n          \"id\": \"\",\r\n          \"nom\": \"\",\r\n          \"ville\": \"\"\r\n        };\r\n        this.sitesResult.splice(0, 0, emptySite);\r\n      });\r\n  }\r\n\r\n  onClickLogin() {\r\n    let user: User = this.userService.getUserByUserNameAndPassword(this.userName, this.password);\r\n    if (user) {\r\n      this.userContextService.setUser(user);\r\n      this.routeStateService.add(\"Dashboard\", '/main/dashboard', null, true);\r\n      this.siteService.site = this.site;\r\n      this.sessionService.setItem(\"site\", this.site);\r\n      return;\r\n    }\r\n    this.toastService.addSingle('error', '', 'Invalid user.');\r\n    return;\r\n  }\r\n\r\n  onLanguageChange($event) {\r\n    this.locale = $event.target.value;\r\n    if (this.locale == undefined || this.locale == null || this.locale.length == 0) {\r\n      this.locale = \"en\";\r\n    }\r\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\r\n    this.translate.use(this.locale);\r\n    this.sessionService.setItem(\"ng-prime-language\", this.locale);\r\n  }\r\n\r\n  getUrl() {\r\n    return \"url('assets/images/bg-home.png')\";\r\n  }\r\n\r\n}\r\n","<div class=\"image\">\r\n    <div class=\"p-grid p-nogutter p-justify-center p-align-center\" style=\"height:100%\">\r\n        <div class=\"centertest\">\r\n            <div class=\"p-grid p-justify-center p-align-center\">\r\n                <img src=\"assets/images/logo-original.png\" width=\"200px\" height=\"auto\" style=\"opacity: 0.85;\">\r\n                <div class=\"p-col-12\">\r\n                    <span class=\"ui-float-label\">\r\n                        <span class=\"foalting-label\">Site</span>\r\n                    <p-dropdown [options]=\"sitesResult\" optionLabel=\"nom\" optionValue=\"id\" [(ngModel)]=\"site\"></p-dropdown>\r\n                    </span>\r\n                </div>\r\n                <div class=\"p-col-12\">\r\n                    <div class=\"ui-inputgroup\">\r\n                        <span class=\"ui-inputgroup-addon\"><i class=\"fa\r\n                                fa-user\"></i></span>\r\n                        <input id=\"input-username\" type=\"text\" size=\"30\" pInputText [(ngModel)]=\"userName\" placeholder=\"Enter User name\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-col-12\">\r\n                    <div class=\"ui-inputgroup\">\r\n                        <span class=\"ui-inputgroup-addon\"><i class=\"fa\r\n                                fa-key\"></i></span>\r\n                        <input id=\"input-password\" type=\"password\" size=\"30\" pInputText [(ngModel)]=\"password\" placeholder=\"Enter Password\">\r\n                    </div>\r\n                    <br>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-12 center\">\r\n                    <button pButton type=\"button\" label=\"CONNEXION\" class=\"ui-button-raised rougebutton\" (click)=\"onClickLogin()\" [disabled]=\"!userName || !password\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div class=\"p-grid p-nogutter p-justify-center p-align-center\" style=\"height:100%\">\r\n        <div class=\"p-xl-3 p-lg-6 p-md-8 p-sm-10 panel-container-header panel-container-content\">\r\n            <p-panel header=\"{{ 'Ng-PrimeLogin' | translate}}\">\r\n                <div class=\"p-col-12\">\r\n                    <p-messages [(value)]=\"msgs\"></p-messages>\r\n                </div>\r\n                <div class=\"p-grid p-justify-center p-align-center\">\r\n                    <div class=\"p-col-12\">\r\n                        <span class=\"ui-float-label\">\r\n                            <span class=\"foalting-label\">Site</span>\r\n                        <p-dropdown [options]=\"sitesResult\" optionLabel=\"nom\" optionValue=\"id\" [(ngModel)]=\"site\"></p-dropdown>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"p-col-12\">\r\n                        <div class=\"ui-inputgroup\">\r\n                            <span class=\"ui-inputgroup-addon\"><i class=\"fa\r\n                                    fa-user\"></i></span>\r\n                            <input id=\"input-username\" type=\"text\" size=\"30\" pInputText [(ngModel)]=\"userName\" placeholder=\"Enter User name\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-col-12\">\r\n                        <div class=\"ui-inputgroup\">\r\n                            <span class=\"ui-inputgroup-addon\"><i class=\"fa\r\n                                    fa-key\"></i></span>\r\n                            <input id=\"input-password\" type=\"password\" size=\"30\" pInputText [(ngModel)]=\"password\" placeholder=\"Enter Password\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-col-12 text-center\">\r\n                        <a>Mot de passe oublié ?</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"p-grid\">\r\n                    <div class=\"p-col-6\">\r\n                        <button pButton type=\"button\" label=\"Se connecter\" class=\"ui-button-raised rougebutton\" (click)=\"onClickLogin()\" [disabled]=\"!userName || !password\"></button>\r\n                    </div>\r\n                    <div class=\"p-col-6\">\r\n                        <button icon=\"fa fa-save\" pButton type=\"button\" label=\"S'enregistrer\" class=\"p-button-success rougebutton\" [routerLink]=\"['/register']\"></button>\r\n                    </div>\r\n                </div>\r\n            </p-panel>\r\n        </div>\r\n    </div> -->\r\n\r\n\r\n</div>","import { DropdownModule, PanelModule } from 'primeng';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from 'src/app/features/login/login.component';\r\nimport { LoginRoutingModule } from 'src/app/features/login/login.routing';\r\nimport { AppCommonModule } from 'src/app/app.common.module';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    AppCommonModule,\r\n    DropdownModule,\r\n    PanelModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      },\r\n      isolate: false\r\n    })\r\n  ],\r\n  declarations: [LoginComponent],\r\n  exports: [TranslateModule]\r\n})\r\nexport class LoginModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from 'src/app/features/login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }"]}