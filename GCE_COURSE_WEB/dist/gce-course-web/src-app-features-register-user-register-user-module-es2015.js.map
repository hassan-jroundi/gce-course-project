{"version":3,"sources":["./src/app/core/services/toast.service.ts","./src/app/core/validators/birthdate.validators.ts","./src/app/features/register-user/register-user.component.ts","./src/app/features/register-user/register-user.component.html","./src/app/features/register-user/register-user.module.ts","./src/app/features/register-user/register-user.routing.ts"],"names":[],"mappings":"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","file":"src-app-features-register-user-register-user-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n/**\r\n * Toast service class\r\n * This class provides methods to add single, multiple alerts as a toast \r\n */\r\nexport class ToastService {\r\n    constructor(private messageService: MessageService) { }\r\n\r\n    /**\r\n     * add single toast message\r\n     * @param severity Severity level of the message, valid values are \"success\", \"info\", \"warn\" and \"error\"\r\n     * @param summary Summary text of the message.\r\n     * @param detail Detail text of the message.\r\n     */\r\n    addSingle(severity: string, summary: string, detail: string) {\r\n        this.messageService.add({ severity: severity, summary: summary, detail: detail });\r\n    }\r\n\r\n    /**\r\n     * add multiple toast messages\r\n     * @param messages \r\n     * array of message type {severity:'success', summary:'Service Message', detail:'Via MessageService'}\r\n     */\r\n    addMultiple(messages: any) {\r\n        this.messageService.addAll(messages);\r\n    }\r\n\r\n    /**\r\n     * clear all toast messages\r\n     */\r\n    clear() {\r\n        this.messageService.clear();\r\n    }\r\n}","import { AbstractControl } from '@angular/forms';\r\n\r\n/**\r\n * validation function\r\n * birth date should be less than 10 years\r\n * @param control \r\n */\r\nexport function birthDateValidator(control: AbstractControl) {\r\n    var value = control.value;\r\n    var today = new Date();\r\n    var birthDate = new Date(value);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var min = 10;\r\n    if (age > min + 1) {\r\n        return null;\r\n    }\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    var reuslt = age >= min ? null : { 'invalidBirthDate': true };\r\n    return reuslt;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Validators, FormControl, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { ToastService } from 'src/app/core/services/toast.service';\r\nimport { birthDateValidator } from 'src/app/core/validators/birthdate.validators';\r\nimport { UserDataService } from 'src/app/core/services/user-data.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: 'register-user.component.html',\r\n  styleUrls: ['register-user.component.css']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  userform: FormGroup;\r\n\r\n  name: string;\r\n\r\n  emailId: string;\r\n\r\n  password: string;\r\n\r\n  version: string;\r\n\r\n  constructor(private userService: UserDataService, private router: Router, private fb: FormBuilder, private toastService: ToastService) { }\r\n\r\n  ngOnInit() {\r\n    this.userform = this.fb.group({\r\n      'name': new FormControl('', Validators.required),\r\n      'password': new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)])),\r\n      'emailId': new FormControl('', [Validators.required, Validators.email]),\r\n      'birthDate': new FormControl('', [Validators.required, birthDateValidator])\r\n    });\r\n\r\n    this.version = environment.version;\r\n  }\r\n\r\n  onClickRegisterUser() {\r\n    let isRegistered: boolean = this.userService.addUser(this.userform.controls[\"name\"].value,\r\n      this.userform.controls[\"password\"].value,\r\n      this.userform.controls[\"emailId\"].value,\r\n      this.userform.controls[\"birthDate\"].value);\r\n    if (isRegistered) {\r\n      this.router.navigate(['/login']);\r\n      this.toastService.addSingle(\"success\", \"\", \"User registered.\")\r\n    }\r\n  }\r\n\r\n  onClickGoToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"user-regisration\">\r\n    <div class=\"p-grid p-nogutter p-justify-center p-align-center\" style=\"height:100%\">\r\n        <div class=\"p-xl-3 p-lg-6 p-md-8 p-sm-10\">\r\n            <form [formGroup]=\"userform\" (ngSubmit)=\"onClickRegisterUser()\">\r\n                <p-panel header=\"User Registration\">\r\n                    <div class=\"p-grid p-justify-center p-align-center\">\r\n                        <div class=\"p-xl-6 p-lg-6 p-md-8 p-sm-10\">\r\n                            <img src=\"assets/images/logo-large.png\" class=\"login-logo\" alt=\"\">\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <div class=\"ui-inputgroup\">\r\n                                <span class=\"ui-inputgroup-addon\"><span class=\"fa fa-user\"></span></span>\r\n                                <input id=\"float-input-username\" type=\"text\" size=\"30\" pInputText formControlName=\"name\" placeholder=\"user name\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-12\" *ngIf=\"userform.controls['name'].errors && userform.controls['name'].dirty\">\r\n                            <p-message severity=\"error\" text=\"User name is required\" *ngIf=\"userform.controls['name'].errors['required']\"></p-message>\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <div class=\"ui-inputgroup\">\r\n                                <span class=\"ui-inputgroup-addon\"><span class=\"fa fa-key\"></span></span>\r\n                                <input id=\"float-input-password\" type=\"password\" size=\"30\" pInputText formControlName=\"password\" placeholder=\"password\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-12\" *ngIf=\"userform.controls['password'].errors && userform.controls['password'].dirty\">\r\n                            <p-message severity=\"error\" text=\"Password is required\" *ngIf=\"userform.controls['password'].errors['required']\"></p-message>\r\n                            <p-message severity=\"error\" text=\"Minimum 6 characters required.\" *ngIf=\"userform.controls['password'].errors['minlength'] \"></p-message>\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <div class=\"ui-inputgroup\">\r\n                                <span class=\"ui-inputgroup-addon\"><span class=\"fa fa-at\"></span></span>\r\n                                <input id=\"float-input-emailid\" type=\"email\" size=\"30\" pInputText formControlName=\"emailId\" placeholder=\"Email Id\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-12\" *ngIf=\"userform.controls['emailId'].errors && userform.controls['emailId'].dirty\">\r\n                            <p-message severity=\"error\" text=\"Email is required\" *ngIf=\"userform.controls['emailId'].errors['required']\"></p-message>\r\n                            <p-message severity=\"error\" text=\"Email is invalid\" *ngIf=\"userform.controls['emailId'].errors['email']\">\r\n                            </p-message>\r\n                        </div>\r\n                        <div class=\"p-col-12\">\r\n                            <p-calendar formControlName=\"birthDate\" placeholder=\"Birth date\" [showIcon]=true dateFormat=\"dd/mm/yy\"></p-calendar>\r\n                        </div>\r\n                        <div class=\"p-col-12\" *ngIf=\"userform.controls['birthDate'].errors && userform.controls['birthDate'].dirty\">\r\n                            <p-message severity=\"error\" text=\"Birthdate is required\" *ngIf=\"userform.controls['birthDate'].errors['required']\"></p-message>\r\n                            <p-message severity=\"error\" text=\"Minimum age should be 10 years.\" *ngIf=\"userform.controls['birthDate'].errors['invalidBirthDate']\"></p-message>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-grid\">\r\n                        <div class=\"p-col-6\">\r\n                            <button pButton type=\"button\" label=\"Register\" class=\"ui-button-raised\" [disabled]=\"!userform.valid\" (click)=\"onClickRegisterUser()\"></button>\r\n                        </div>\r\n                        <div class=\"p-col-6\">\r\n                            <button pButton type=\"button\" label=\"Login\" class=\"ui-button-raised\" (click)=\"onClickGoToLogin()\"></button>\r\n                        </div>\r\n                    </div>\r\n                </p-panel>\r\n                <div class=\"extra-page-footer\">\r\n                    <div>Version : {{version}}</div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterUserComponent } from 'src/app/features/register-user/register-user.component';\r\nimport { RegisterUserRoutingModule } from 'src/app/features/register-user/register-user.routing';\r\nimport { AppCommonModule } from 'src/app/app.common.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegisterUserRoutingModule,\r\n    AppCommonModule\r\n  ],\r\n  declarations: [RegisterUserComponent]\r\n})\r\nexport class RegisterUserModule { }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterUserComponent } from 'src/app/features/register-user/register-user.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RegisterUserComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class RegisterUserRoutingModule { }"],"sourceRoot":"webpack:///"}